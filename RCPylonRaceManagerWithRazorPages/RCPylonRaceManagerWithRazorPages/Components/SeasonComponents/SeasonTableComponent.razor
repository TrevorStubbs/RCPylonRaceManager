@page "/seasontable"
@using RCPylonRaceManagerWithRazorPages.Model.DTOs
@using Microsoft.AspNetCore.Components.Web
@using System.ComponentModel.DataAnnotations;
@inject RCPylonRaceManagerWithRazorPages.Pages.SeasonModel SeasonModel
@inject RCPylonRaceManagerWithRazorPages.Model.Interfaces.ISeasonPilot SeasonPilot
@inject RCPylonRaceManagerWithRazorPages.Model.Interfaces.ISeason Season

<table class="table">
    <thead>
        <tr class="text-center">
            <th colspan="3">Pilot List</th>
        </tr>
    </thead>
    <thead>
        <tr>
            <th>Pilot Name</th>
            <th>Season Score</th>
            <th>Email</th>
            <th>AMA Number</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var pilot in SeasonPilotDTOs)
        {
            <SeasonTableDataComponent SeasonPilotDTO="@pilot" />
        }
    </tbody>
</table>

<button class="btn btn-primary" @onclick="() => OpenModal()">Register Pilot</button>

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Register New Pilot</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => CloseModal()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label>First Name:</label>
                        <input class="form-control" placeholder="First Name" @bind="FirstName" />
                    </div>
                    <div class="form-group">
                        <label>Last Name:</label>
                        <input class="form-control" placeholder="Last Name" @bind="LastName" />
                    </div>
                    <div class="form-group">
                        <label>AMA Number:</label>
                        <input class="form-control" placeholder="AMA Number" @bind="AMANumber" />
                    </div>
                    <div class="form-group">
                        <label>Email Address:</label>
                        <input class="form-control" placeholder="Email Address" @bind="EmailAddress" />
                    </div>
                    <button type="submit" class="btn btn-primary" @onclick="PostNewPilot">Register Pilot</button>
                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => CloseModal()">Close</button>
            </div>
        </div>
    </div>
</div>


@code {
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public int AMANumber { get; set; }
    [EmailAddress]
    public string EmailAddress { get; set; }

    [Parameter]
    public List<SeasonPilotDTO> SeasonPilotDTOs { get; set; }

    [Parameter]
    public int SeasonYear { get; set; }

    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    private bool shouldRender = false;
    protected override void OnParametersSet() => shouldRender = true;

    // TODO build update Modal and method

    public void OpenModal()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
    }

    public void CloseModal()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
    }

    public async Task PostNewPilot()
    {
        var newPilot = new SeasonPilotDTO()
        {
            FirstName = this.FirstName,
            LastName = this.LastName,
            AMANumber = this.AMANumber,
            Email = this.EmailAddress
        };


        await SeasonModel.OnPost(newPilot, SeasonYear);

        SeasonPilotDTOs = await SeasonPilot.GetAllSeasonsPilotsForASeason(SeasonYear);

        StateHasChanged();
    }
}
